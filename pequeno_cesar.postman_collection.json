{
	"info": {
		"_postman_id": "8d8255c7-8b06-4a23-ae4e-630e2556a39f",
		"name": "pequeno_cesar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "home",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}",
					"protocol": "http",
					"host": [
						"{{host}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/login bad pass",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"eduardo\",\n\t\"password\": \"asdf\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/login",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/login bad username",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"eduardoX\",\n\t\"password\": \"asdf\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/login",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/login eduardo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fresh_token !== undefined).to.be.true;",
							"    pm.environment.set(\"fresh_token\", jsonData.fresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"eduardo\",\n\t\"password\": \"myUserPassword123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/login",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/refreshable",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refresh_token !== undefined).to.be.true;",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{host}}/refreshable",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"refreshable"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.access_token !== undefined).to.be.true;",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{refresh_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/refresh",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"refresh"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/product/Pizza Bad Bearer Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4d214341-1f71-4899-9919-abc84eb0dd7e",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJuYmYiOjE1ODYyODYzMDAsImlhdCI6MTU4NjI4NjMwMCwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIiwiaWRlbnRpdHkiOiJlZHVhcmRvIiwianRpIjoiYmQzMjk4NDItMmQ3MC00OWUxLThmMTEtZjM3YmNiZWNkYjM0IiwiZXhwIjoxNTg2Mjg3MjAwLCJ1c2VyX2NsYWltcyI6eyJyb2xlIjoiY29uc3VtZXIifX0.hZo1UKwpOSb5OYisLiXUTJcsk6syp6EB4QDR_FeVuVo"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Crunch\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Pizza",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68ea64cd-77f4-49aa-81e6-7984af8cac87",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Crunch\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package Crazy Combo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1682fe1d-3292-4580-a63d-31b79e1fd7ea",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Combo\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package Paquete Fiesta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c22141bf-16e8-4893-a99c-869cb2d2334f",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Paquete Fiesta\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				}
			},
			"response": []
		},
		{
			"name": "/products",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b7ac3e27-0c7c-4737-9bfc-33a692da3b0d",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/products",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Pizza Non existing",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea1dafca-6553-462e-a2a3-b3de2ba65d82",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Medina\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Pizza Not Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd9fcd53-edcf-4f96-84a8-6632581f383a",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Medina\",\n\t\"price\": 199, \n\t\"ingredients\": [\"pepperoni\", \"orilla de chicharrón de queso\", \"tocino\"],\n\t\"form\": \"CUADRADA\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				},
				"description": "CRUD for little caesars products"
			},
			"response": []
		},
		{
			"name": "/product/Pizza Not Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8cf8b8b3-ca9d-4570-99d9-66a0b8e287b8",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Crunch\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/logout eduardo refresh_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{refresh_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/logout",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/logout2 eduardo access_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/logout2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout2"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/product/Pizza Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68ea64cd-77f4-49aa-81e6-7984af8cac87",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Crunch\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/login ernesto",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a82719c3-2266-412b-a723-f99ca084e828",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.fresh_token !== undefined).to.be.true;",
							"    pm.environment.set(\"fresh_token\", jsonData.fresh_token);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"ernesto\",\n\t\"password\": \"myAdminPassword123\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/login",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/refreshable Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refresh_token !== undefined).to.be.true;",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{host}}/refreshable",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"refreshable"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/refresh Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Token is not empty\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.access_token !== undefined).to.be.true;",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{refresh_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/refresh",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"refresh"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/product/Pizza",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "169687dd-2721-4688-8b0d-43d9460cf8ab",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Medina\",\n\t\"price\": 199, \n\t\"ingredients\": [\"pepperoni\", \"orilla de chicharrón de queso\", \"tocino\"],\n\t\"form\": \"REDONDA\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				},
				"description": "CRUD for little caesars products"
			},
			"response": []
		},
		{
			"name": "/product/Pizza New",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8f03e5ed-c719-42b1-a3fb-e25c6783d9a7",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Medina\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package Ultra Big",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52af0aa7-315e-4cb6-beb4-c6ac0c48c599",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Ultra Big\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Pizza",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "673db289-bd1e-4498-a1c8-7605e19dcb30",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Crazy Medina\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Pizza",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Pizza"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b46807fc-4f69-40c6-b4dc-fc7b80a7e935",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Ultra Big\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package Ultra Big Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91abeb86-58ab-4f00-89f2-850abd16ce69",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(100);",
							"});",
							"",
							"pm.test(\"Package Ultra Big has been deleted successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"The product 'Ultra Big' does not exist\")",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{fresh_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Ultra Big\"\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				}
			},
			"response": []
		},
		{
			"name": "/product/Package Ultra Big",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "169687dd-2721-4688-8b0d-43d9460cf8ab",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{fresh_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Ultra Big\",\n    \"units\": 1,\n    \"price\": 450,\n    \"pizzas\": [\"3 MEAT TREAT\", \"HULA HAWAIIAN\"],\n    \"complements\": [\"Crazy Bread\"],\n    \"drinks\": [\"Pepsi\", \"Mirinda\", \"Manzana\"],\n    \"sauces\": [\"Crazy Sauce\"]\n}"
				},
				"url": {
					"raw": "http://{{host}}/product/Package",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"Package"
					]
				},
				"description": "CRUD for little caesars products"
			},
			"response": []
		},
		{
			"name": "/logout ernesto refresh_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{refresh_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/logout",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		},
		{
			"name": "/logout2 ernesto access_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0873ac01-abb3-4577-9367-470f8f601c64",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{access_token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}/logout2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"path": [
						"logout2"
					]
				},
				"description": "Get JWT Bearer token for user or admin"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}